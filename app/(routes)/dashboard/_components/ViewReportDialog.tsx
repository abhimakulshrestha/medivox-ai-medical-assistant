
import React from 'react'
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from "@/components/ui/dialog"
import { Button } from '@/components/ui/button'
import { SessionDetail } from '../medical-agent/[sessionId]/page'
import moment from 'moment'

type MedicalReport = {
  sessionId?: string;
  agent?: string;
  user?: string;
  timestamp?: string;
  chiefComplaint?: string;
  summary?: string;
  symptoms?: string[];
  duration?: string;
  severity?: string;
  medicationsMentioned?: string[];
  recommendations?: string[];
};

type props ={
  record:SessionDetail
}

function ViewReportDialog({record}:props) {
  return (
    <Dialog>
  <DialogTrigger asChild>
    <Button variant={'link'} size={'sm'}>View Report</Button>
  </DialogTrigger>
  <DialogContent>
    <DialogHeader>
      <DialogTitle asChild>
        <h2 className ='text-center text-4xl'>Medical AI Voice Agent Report</h2>
      </DialogTitle>
      <DialogDescription asChild>
        {(() => {
          let report: MedicalReport = {};
          try {
            report = typeof record.report === 'string' ? JSON.parse(record.report) : (record.report as MedicalReport) || {};
          } catch (e) {
            report = {};
          }
          return (
            <div className="mt-10 space-y-6">
              {/* Session Info */}
              <h2 className="font-bold text-blue-700 dark:text-blue-400 text-lg mb-2">Session Info</h2>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
                <div><span className="font-bold">Doctor:</span> {record.selectedDoctor?.specialist ?? "Unknown"}</div>
                <div><span className="font-bold">Consulted On:</span> {report.timestamp ? moment(new Date(report.timestamp)).fromNow() : moment(new Date(record.createdOn)).fromNow()}</div>
                <div><span className="font-bold">User:</span> {report.user ?? "Anonymous"}</div>
                <div><span className="font-bold">Agent:</span> {report.agent ?? "Unknown"}</div>
              </div>

              {/* Chief Complaint */}
              <h2 className="font-bold text-blue-700 dark:text-blue-400 text-lg mb-2">Chief Complaint</h2>
              <div className="mb-4">{report.chiefComplaint ?? "Not specified."}</div>

              {/* Summary */}
              <h2 className="font-bold text-blue-700 dark:text-blue-400 text-lg mb-2">Summary</h2>
              <div className="mb-4">{report.summary ?? "No summary available."}</div>

              {/* Symptoms */}
              <h2 className="font-bold text-blue-700 dark:text-blue-400 text-lg mb-2">Symptoms</h2>
              <ul className="list-disc ml-6 mb-4">
                {(report.symptoms && report.symptoms.length > 0) ? report.symptoms.map((symptom, idx) => (
                  <li key={idx}>{symptom}</li>
                )) : <li>Not specified</li>}
              </ul>

              {/* Duration & Severity */}
              <h2 className="font-bold text-blue-700 dark:text-blue-400 text-lg mb-2">Duration & Severity</h2>
              <div className="flex flex-row gap-8 mb-4">
                <div><span className="font-bold">Duration:</span> {report.duration ?? "Not specified"}</div>
                <div><span className="font-bold">Severity:</span> {report.severity ?? "Not specified"}</div>
              </div>

              {/* Medications Mentioned */}
              <h2 className="font-bold text-blue-700 dark:text-blue-400 text-lg mb-2">Medications Mentioned</h2>
              <ul className="list-disc ml-6 mb-4">
                {(report.medicationsMentioned && report.medicationsMentioned.length > 0) ? report.medicationsMentioned.map((med, idx) => (
                  <li key={idx}>{med}</li>
                )) : <li>None mentioned</li>}
              </ul>

              {/* Recommendations */}
              <h2 className="font-bold text-blue-700 dark:text-blue-400 text-lg mb-2">Recommendations</h2>
              <ul className="list-disc ml-6 mb-4">
                {(report.recommendations && report.recommendations.length > 0) ? report.recommendations.map((rec, idx) => (
                  <li key={idx}>{rec}</li>
                )) : <li>No recommendations</li>}
              </ul>

              <hr className="my-4" />
              <div className="text-xs text-center text-gray-500">This report was generated by an AI Medical Assistant for informational purposes only.</div>
            </div>
          );
        })()}
      </DialogDescription>
    </DialogHeader>
  </DialogContent>
</Dialog>
  )
}

export default ViewReportDialog
